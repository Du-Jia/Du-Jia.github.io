{"meta":{"title":"Du-Jia","subtitle":"Record the time","description":null,"author":"Du Jia","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"云计算课程笔记","slug":"云计算课程笔记","date":"2019-03-18T07:25:57.000Z","updated":"2019-03-18T07:29:16.406Z","comments":true,"path":"2019/03/18/云计算课程笔记/","link":"","permalink":"http://yoursite.com/2019/03/18/云计算课程笔记/","excerpt":"","text":"云计算导论 教材：刘鹏: 《云计算（第三版）》Adrian Mouat: 《Docker 开发指南》龚正等： 《Kubernetes权威指南》张晓斌： 《OpenStack企业云平台架构与实践》 [toc] 概论从大数据到云计算 目前数据量与日俱增 单机无法在合理时间内处理 存在大量的复杂数据 4V特征 大数据的构成 交易数据 交互数据 数据处理（分布式存储，分布式计算） 数据密集型处理架构 关键技术 数据采集 Hadoop（硬盘读取） NLP 文本处理 多媒体处理 Streaming Data（内存内作计算，势头比较猛，建议学习方向） 数据分析 交互式可视化探索分析 大规模机器学习 存储，组织，管理 数据隐私防范保护措施与数据安全技术 数据存储备份 数据放置和调度 建议学习数据挖掘课程 单机不能处理这样巨量的数据，所以需要引入云计算云计算概述 云计算核心理念 在一大堆烂机器上提供高性能可靠服务 特点 超大规模 虚拟化 虚拟化是表示计算机资源的抽象方法。如VMware中虚拟机一样，通过虚拟化可以访问虚拟化前的计算资源并且屏蔽了虚拟化之前的底层资源。 服务器虚拟化 存储虚拟化 网络虚拟化 桌面虚拟化 虚拟化计算模式： 所有电脑的计算资源组成一个资源池 虚拟硬件对资源池中的计算资源进行统一管理 服务器虚拟化的意义 共享和隔离： 在单一物理服务器上同时运行多个虚拟机，虚拟机之间相互隔离 资源弹性：虚拟机可以根据其需求弹性增加或减少其分配的硬件资源。提高硬件资源分配的灵活性。 封装：将整个系统封装到文件里。 迁移：不加修改，直接迁移，增强系统的可靠性和可拓展性。 KVM 高可靠性 可靠的数据存储中心，数据备份 数据在云端，不怕丢失 动态迁移 没有空间，时间限制，登录即可运算。 高可伸缩性 动态伸缩 软件自动升级 按需服务 资源池 按需购买 极其廉价 廉价节点构成云 管理成本低 提高资源利用率 建在电力资源丰富的地区，降低成本 云计算产品 SaaS: PaaS: Chrome OS IaaS 阿里云 腾讯云 Amazon EC2 / S3 云计算实现机制 SAO构建层 管理中间件层 资源池层 物；理资源层虚拟化（11.04）…………KVM KVM加载Linux内核，提供内存和CPU的虚拟化 Qemu实现其他硬件的虚拟化 Qemu 是纯软件实现的，所有的指令都要经 Qemu 转译，性能非常低 KVM管理工具 QEMU-KVM 只能管理KVM虚拟机 Libvirt, virsh, virt-manager Libvirt 是一套免费、开源的支持Linux下主流虚拟化平台的C函数库，旨在为各种虚拟化平台提供一套方便、可靠的编程接口（virt-manager基于Libvirt开发） Libvirt、Qemu、KVM的关系：实验开启虚拟化 CentOS 验证CPU是否支持KVMegrep &quot;vmx|svm&quot; /proc/cpuinfo（结果中出现vmx或者svm） 关闭SELinux：将/etc/sysconfig/selinux中的SELinux=enforcing修改为SELinux=disabled 关闭防火墙 systemctl disable firewalled systemctl stop firewalled 关闭NetWorkManager systemctl stop NetworkManager","categories":[],"tags":[]},{"title":"C++中集合的简单使用","slug":"C++中集合的简单使用","date":"2018-08-10T12:28:01.000Z","updated":"2018-08-11T14:37:54.707Z","comments":true,"path":"2018/08/10/C++中集合的简单使用/","link":"","permalink":"http://yoursite.com/2018/08/10/C++中集合的简单使用/","excerpt":"","text":"C++， Class set 官方文档 2018/08/08 头文件： include&lt;set&gt; 常用函数： insert begin() end() 遍历： 12345for(set&lt;string&gt;::iterator it = dictionary.begin(); it != dictionary.end();++it)&#123; cout &lt;&lt; *it &lt;&lt; endl;&#125; C++ 字符串大小写转换 Reference 做题总结 Uva10815: 安迪的第一个字典 题目要求： 输入一段英文，要求按字典顺序将这段英文中的单词列出 UvaOJ644: immediately decodable 第一次提交： Runtime Error: 经过检查发现是string数组开得不够大 第二次提交： 超时长","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"Basic","slug":"Basic","permalink":"http://yoursite.com/tags/Basic/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-08-10T12:00:15.365Z","updated":"2018-08-11T11:32:26.542Z","comments":true,"path":"2018/08/10/hello-world/","link":"","permalink":"http://yoursite.com/2018/08/10/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}